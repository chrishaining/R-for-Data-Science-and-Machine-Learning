movieGram <- movieGram + geom_histogram(binwidth=0.1, fill='red', color='black', alpha=0.4)
# add labels
movieGram <- movieGram + xlab('Movie Rating') + ylab('Count')
# add title
movieGram <- movieGram + ggtitle('My Movie Ratings')
print(movieGram)
library(ggplot2)
library('ggplot2movies')
# create data layer and aesthetics
movieGram <- ggplot(movies, aes(x=rating))
# add geometries layer
# alpha affects the transparency of the plot
movieGram <- movieGram + geom_histogram(binwidth=0.1, fill='red', color='black', alpha=0.4)
# add labels
movieGram <- movieGram + xlab('Movie Rating') + ylab('Count')
# add title
movieGram <- movieGram + ggtitle('My Movie Ratings')
print(movieGram)
View(movieGram)
library(ggplot2)
library('ggplot2movies')
# create data layer and aesthetics
movieGram <- ggplot(movies, aes(x=rating))
# add geometries layer
# alpha affects the transparency of the plot
movieGram <- movieGram + geom_histogram(binwidth=0.1, fill='red', color='black', alpha=0.4)
# add labels
movieGram <- movieGram + xlab('Movie Rating') + ylab('Count')
# add title
movieGram <- movieGram + ggtitle('My Movie Ratings')
print(movieGram)
View(movieGram)
View(movieGram)
print(movieGram)
library(ggplot2)
library('ggplot2movies')
# create data layer and aesthetics
movieGram <- ggplot(movies, aes(x=rating))
# add geometries layer
# alpha affects the transparency of the plot
movieGram <- movieGram + geom_histogram(binwidth=0.1, aes(fill=..count..))
# add labels
movieGram <- movieGram + xlab('Movie Rating') + ylab('Count')
# add title
movieGram <- movieGram + ggtitle('My Movie Ratings')
print(movieGram)
df <- mtcars
# data and aesthetics layer
carPlot <- ggplot(df, aes(x=wt,y=mpg))
# geometry
carPlot <- carPlot + geom_point()
df <- mtcars
# data and aesthetics layer
carPlot <- ggplot(df, aes(x=wt,y=mpg))
# geometry
carPlot <- carPlot + geom_point()
carPlot
df <- mtcars
# data and aesthetics layer
carPlot <- ggplot(df, aes(x=wt,y=mpg))
# geometry
carPlot <- carPlot + geom_point(size=5)
carPlot
df <- mtcars
# data and aesthetics layer
carPlot <- ggplot(df, aes(x=wt,y=mpg))
# geometry
carPlot <- carPlot + geom_point(size=2)
carPlot
df <- mtcars
# data and aesthetics layer
carPlot <- ggplot(df, aes(x=wt,y=mpg))
# geometry
carPlot <- carPlot + geom_point(size=2, alpha=0.5)
carPlot
df <- mtcars
# data and aesthetics layer
carPlot <- ggplot(df, aes(x=wt,y=mpg))
# geometry
carPlot <- carPlot + geom_point(aes(size=hp))
carPlot
df <- mtcars
# data and aesthetics layer
carPlot <- ggplot(df, aes(x=wt,y=mpg))
# geometry
# base the size on hp by putting it into aesthetics
#carPlot <- carPlot + geom_point(aes(size=hp))
# use factor if you want to size by a categorical variable
carPlot <- carPlot + geom_point(aes(size=factor(cyl))
carPlot
df <- mtcars
# data and aesthetics layer
carPlot <- ggplot(df, aes(x=wt,y=mpg))
# geometry
# base the size on hp by putting it into aesthetics
#carPlot <- carPlot + geom_point(aes(size=hp))
# use factor if you want to size by a categorical variable
carPlot <- carPlot + geom_point(aes(size=factor(cyl)))
carPlot
df <- mtcars
# data and aesthetics layer
carPlot <- ggplot(df, aes(x=wt,y=mpg))
# geometry
# base the size on hp by putting it into aesthetics
#carPlot <- carPlot + geom_point(aes(size=hp))
# use factor if you want to have a different shape for each type of categorical variable
carPlot <- carPlot + geom_point(aes(shape=factor(cyl)))
carPlot
df <- mtcars
# data and aesthetics layer
carPlot <- ggplot(df, aes(x=wt,y=mpg))
# geometry
# base the size on hp by putting it into aesthetics
#carPlot <- carPlot + geom_point(aes(size=hp))
# use factor if you want to have a different shape for each type of categorical variable
carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
carPlot
df <- mtcars
# data and aesthetics layer
carPlot <- ggplot(df, aes(x=wt,y=mpg))
# geometry
# base the size on hp by putting it into aesthetics
#carPlot <- carPlot + geom_point(aes(size=hp))
# use factor if you want to have a different shape and colour for each type of categorical variable
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
carPlot <- carPlot + geom_point(aes(shape=factor(cyl))) + scale_color_discrete(4='red',6='yellow',8='brown')
df <- mtcars
# data and aesthetics layer
carPlot <- ggplot(df, aes(x=wt,y=mpg))
# geometry
# base the size on hp by putting it into aesthetics
#carPlot <- carPlot + geom_point(aes(size=hp))
# use factor if you want to have a different shape and colour for each type of categorical variable
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
carPlot <- carPlot + geom_point(aes(shape=factor(cyl))) + scale_color_gradient(low='blue',high='red')
carPlot
library(ggplot2)
library('ggplot2movies')
# create data layer and aesthetics
movieGram <- ggplot(movies, aes(x=rating))
# add geometries layer
# alpha affects the transparency of the plot
#movieGram <- movieGram + geom_histogram(binwidth=0.1, color='red', fill='pink', alpha=0.4)
movieGram <- movieGram + geom_histogram(binwidth=0.1, aes(fill=..count..))
# add labels
movieGram <- movieGram + xlab('Movie Rating') + ylab('Count')
# add title
movieGram <- movieGram + ggtitle('My Movie Ratings')
print(movieGram)
df <- mtcars
# data and aesthetics layer
carPlot <- ggplot(df, aes(x=wt,y=mpg))
# geometry
# base the size on hp by putting it into aesthetics
#carPlot <- carPlot + geom_point(aes(size=hp))
# use factor if you want to have a different shape and colour for each type of categorical variable
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=hp)) + scale_color_gradient(low='blue',high='red')
carPlot
df <- mtcars
# data and aesthetics layer
carPlot <- ggplot(df, aes(x=wt,y=mpg))
# geometry
# base the size on hp by putting it into aesthetics
#carPlot <- carPlot + geom_point(aes(size=hp))
# use factor if you want to have a different shape and colour for each type of categorical variable
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
carPlot
# import the mpg dataset that comes with ggplot2
df <- mpg
mpgBar <- ggplot(df,aes(x=class))
mpgBar <- geom_bar(aes(fill=drv))
mpgBar
# import the mpg dataset that comes with ggplot2
df <- mpg
mpgBar <- ggplot(df,aes(x=class))
mpgBar <- mpgBar + geom_bar(aes(fill=drv))
mpgBar
# import the mpg dataset that comes with ggplot2
df <- mpg
# create the data and aesthetics
mpgBar <- ggplot(df,aes(x=class))
#add geometry
#basic
mpgBar <- mpgBar + geom_bar()
#mpgBar <- mpgBar + geom_bar(aes(fill=drv))
mpgBar
# import the mpg dataset that comes with ggplot2
df <- mpg
# create the data and aesthetics
mpgBar <- ggplot(df,aes(x=class))
#add geometry
#basic
#mpgBar <- mpgBar + geom_bar()
# split the bars by another variable (drv)
#mpgBar <- mpgBar + geom_bar(aes(fill=drv))
mpgBar <- mpgBar + geom_bar(aes(fill=drv),position = 'dodge'))
# import the mpg dataset that comes with ggplot2
df <- mpg
# create the data and aesthetics
mpgBar <- ggplot(df,aes(x=class))
#add geometry
#basic
#mpgBar <- mpgBar + geom_bar()
# split the bars by another variable (drv)
#mpgBar <- mpgBar + geom_bar(aes(fill=drv))
mpgBar <- mpgBar + geom_bar(aes(fill=drv),position = 'dodge')
mpgBar
# import the mpg dataset that comes with ggplot2
df <- mpg
# create the data and aesthetics
mpgBar <- ggplot(df,aes(x=class))
#add geometry
#basic
#mpgBar <- mpgBar + geom_bar()
# split the bars by another variable (drv)
#mpgBar <- mpgBar + geom_bar(aes(fill=drv))
# subdivide the bars by another variable (uses position = 'dodge' to create two separate bars per class of vehicle)
#mpgBar <- mpgBar + geom_bar(aes(fill=drv),position = 'dodge')
# use position = 'fill' to show how each class is composed- the percentage of each drv within a class
mpgBar <- mpgBar + geom_bar(aes(fill=drv),position = 'fill')
mpgBar
carBox <- ggplot(df,aes(x=factor(cyl),y=mpg))
carBox
carBox <- ggplot(df,aes(x=factor(cyl),y=mpg)) + geom_boxplot()
carBox
carBox <- ggplot(df,aes(x=factor(cyl),y=mpg)) + geom_boxplot()
carBox
carData <- mtcars
carBox <- ggplot(carData,aes(x=factor(cyl),y=mpg)) + geom_boxplot()
carBox
carData <- mtcars
carBox <- ggplot(carData,aes(x=factor(cyl),y=mpg)) + geom_boxplot() + coord_flip()
carBox
carData <- mtcars
# use coord_flip to flip the axes
carBox <- ggplot(carData,aes(x=factor(cyl),y=mpg)) + geom_boxplot(aes(fill=factor(cyl))) + coord_flip()
carBox
carData <- mtcars
# use coord_flip to flip the axes
carBox <- ggplot(carData,aes(x=factor(cyl),y=mpg)) + geom_boxplot(aes(fill=factor(cyl))) + coord_flip() + theme_get()
carBox
carData <- mtcars
# use coord_flip to flip the axes
carBox <- ggplot(carData,aes(x=factor(cyl),y=mpg)) + geom_boxplot(aes(fill=factor(cyl))) + coord_flip() + theme_linedraw()
carBox
movieData <- movies
moviePlot <- ggplot(movieData, aes(x=year,y=rating))
movieData <- movies
moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_bin2d()
moviePlot
movieData <- movies
moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_bin2d() + scale_fill_gradient(high = 'red',low = 'blue')
moviePlot
movieData <- movies
moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_bin2d() + scale_fill_gradient(high = 'red',low = 'white')
moviePlot
movieData <- movies
moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_bin2d() + scale_fill_gradient(high = 'red',low = 'blue')
moviePlot
movieData <- movies
moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_bin2d(binwidth=c(3,1)) + scale_fill_gradient(high = 'red',low = 'blue')
moviePlot
movieData <- movies
# moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_bin2d(binwidth=c(3,1)) + scale_fill_gradient(high = 'red',low = 'blue')
moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_hex() + scale_fill_gradient(high = 'red',low = 'blue')
moviePlot
install.packages("hexbin")
library(hexbin)
carData <- mtcars
# use coord_flip to flip the axes
carBox <- ggplot(carData,aes(x=factor(cyl),y=mpg)) + geom_boxplot(aes(fill=factor(cyl))) + coord_flip() + theme_linedraw()
carBox
movieData <- movies
# moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_bin2d(binwidth=c(3,1)) + scale_fill_gradient(high = 'red',low = 'blue')
moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_hex() + scale_fill_gradient(high = 'red',low = 'blue')
moviePlot
movieData <- movies
# moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_bin2d(binwidth=c(3,1)) + scale_fill_gradient(high = 'red',low = 'blue')
# moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_hex() + scale_fill_gradient(high = 'red',low = 'blue')
moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_density2d() + scale_fill_gradient(high = 'red',low = 'blue')
moviePlot
movieData <- movies
# moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_bin2d(binwidth=c(3,1)) + scale_fill_gradient(high = 'red',low = 'blue')
# moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_hex() + scale_fill_gradient(high = 'red',low = 'blue')
moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_density2d()
#+ scale_fill_gradient(high = 'red',low = 'blue')
moviePlot
movieData <- movies
# moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_bin2d(binwidth=c(3,1)) + scale_fill_gradient(high = 'red',low = 'blue')
# moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_hex() + scale_fill_gradient(high = 'red',low = 'blue')
moviePlot <- ggplot(movieData, aes(x=year,y=rating)) + geom_density2d()
moviePlot
ggplot(mpg, aes(x=displ,y=hwy)) + geom_point()
plotto <- ggplot(mpg, aes(x=displ,y=hwy)) + geom_point()
plotto + coord_cartesian(xlim=c(1,4),ylim=c(15,30))
plotto
plotto <- ggplot(mpg, aes(x=displ,y=hwy)) + geom_point()
plotto2 <- plotto + coord_cartesian(xlim=c(1,4),ylim=c(15,30))
plotto
plotto2
plotto <- ggplot(mpg, aes(x=displ,y=hwy)) + geom_point()
plotto2 <- plotto + coord_cartesian(xlim=c(1,4),ylim=c(15,30))
plotto3 <- plotto + coord_fixed(ratio = 1/3)
plotto
plotto2
plotto3
# the .
facetPlot <- plotto + facet_grid(. ~ cyl)
facetPlot
# the . is what you want to facet by on x axis. the cyl is what you want to facet by on the y axis.
facetPlot <- plotto + facet_grid(. ~ cyl)
facetPlot
# the . is what you want to facet by on x axis. the cyl is what you want to facet by on the y axis.
facetPlot <- plotto + facet_grid(mpg ~ cyl)
facetPlot
# the . is what you want to facet by on x axis. the cyl is what you want to facet by on the y axis.
facetPlot <- plotto + facet_grid(class ~ cyl)
facetPlot
# the drv is what you want to facet by on x axis. the cyl is what you want to facet by on the y axis. Instead of a column, you can use a full stop.
facetPlot <- plotto + facet_grid(drv ~ cyl)
#facetPlot <- plotto + facet_grid(. ~ cyl)
facetPlot
# the drv is what you want to facet by on x axis. the cyl is what you want to facet by on the y axis. Instead of a column, you can use a full stop.
#facetPlot <- plotto + facet_grid(drv ~ cyl)
#facetPlot <- plotto + facet_grid(. ~ cyl)
facetPlot <- plotto + facet_grid(drv ~ .)
facetPlot
install.packages("ggthemes")
library(ggthemes)
plotty <- ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
plotty
theme_set(theme_minimal())
plotty <- ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
plotty
# you can set the theme for all subsequent themes
#theme_set(theme_minimal())
plotty <- ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
# you can add a theme to a specific plot
plotty <- plotty + theme_dark()
plotty
# you can set the theme for all subsequent themes
#theme_set(theme_minimal())
plotty <- ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
# you can add a theme to a specific plot
#plotty <- plotty + theme_dark()
# using the ggthemes package
plotty <- plotty + theme_economist()
plotty
# you can set the theme for all subsequent themes
#theme_set(theme_minimal())
plotty <- ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
# you can add a theme to a specific plot
#plotty <- plotty + theme_dark()
# using themes from ggthemes package
plotty <- plotty + theme_fivethirtyeight()
plotty
# you can set the theme for all subsequent themes
#theme_set(theme_minimal())
plotty <- ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
# you can add a theme to a specific plot
#plotty <- plotty + theme_dark()
# using themes from ggthemes package
plotty <- plotty + theme_hc()
plotty
# you can set the theme for all subsequent themes
#theme_set(theme_minimal())
plotty <- ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
# you can add a theme to a specific plot
#plotty <- plotty + theme_dark()
# using themes from ggthemes package
plotty <- plotty + theme_calc()
plotty
# you can set the theme for all subsequent themes
#theme_set(theme_minimal())
plotty <- ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
# you can add a theme to a specific plot
#plotty <- plotty + theme_dark()
# using themes from ggthemes package
plotty <- plotty + theme_excel_new()
plotty
# you can set the theme for all subsequent themes
#theme_set(theme_minimal())
plotty <- ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
# you can add a theme to a specific plot
#plotty <- plotty + theme_dark()
# using themes from ggthemes package
plotty <- plotty + theme_few()
plotty
# you can set the theme for all subsequent themes
#theme_set(theme_minimal())
plotty <- ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
# you can add a theme to a specific plot
#plotty <- plotty + theme_dark()
# using themes from ggthemes package
plotty <- plotty + theme_gdocs()
plotty
# you can set the theme for all subsequent themes
#theme_set(theme_minimal())
plotty <- ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
# you can add a theme to a specific plot
#plotty <- plotty + theme_dark()
# using themes from ggthemes package
plotty <- plotty + theme_foundation()
plotty
# you can set the theme for all subsequent themes
#theme_set(theme_minimal())
plotty <- ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
# you can add a theme to a specific plot
#plotty <- plotty + theme_dark()
# using themes from ggthemes package
plotty <- plotty + theme_pander()
plotty
library(ggplot2)
mpgHist <- ggplot(mpg, aes(x=hwy)) + geom_histogram()
mpgHist
mpgHist <- ggplot(mpg, aes(x=hwy)) + geom_histogram(aes(fill=model))
mpgHist
mpgHist <- ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=0.1, aes(fill=model))
mpgHist
mpgHist <- ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=0.2, aes(fill=model))
mpgHist
mpgHist <- ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=1, aes(fill=model))
mpgHist
library(ggplot2)
library(ggthemes)
head(mpg)
library(ggplot2)
library(ggthemes)
head(mpg)
colnames(mpg)
carBar <- ggplot(mpg, aes(x=manufacturer)) + geom_bar(aes(fill=cyl))
carBar
carBar <- ggplot(mpg, aes(x=manufacturer)) + geom_bar(aes(fill=factor(cyl))
carBar
carBar <- ggplot(mpg, aes(x=manufacturer)) + geom_bar(aes(fill=factor(cyl)))
carBar
head(txhousing)
head(txhousing)
colnames(txhousing)
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point()
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(shape=factor(month)))
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(shape=factor(city)))
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(shape=factor(year)))
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(fill=factor(month)))
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(fill=factor(month))) + scale_color_discrete()
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)))
#+ scale_color_discrete()
#help(scal)
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)))
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(size=3, color=factor(month)))
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=3)
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2)
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
volSales
smoothVolSales <- volSales + geom_smooth()
smoothVolSales <- volSales + geom_smooth()
smoothVolSales
smoothVolSales <- volSales + geom_smooth(color='red')
smoothVolSales
