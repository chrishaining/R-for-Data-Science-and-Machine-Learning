#plotty <- plotty + theme_dark()
# using themes from ggthemes package
plotty <- plotty + theme_gdocs()
plotty
# you can set the theme for all subsequent themes
#theme_set(theme_minimal())
plotty <- ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
# you can add a theme to a specific plot
#plotty <- plotty + theme_dark()
# using themes from ggthemes package
plotty <- plotty + theme_foundation()
plotty
# you can set the theme for all subsequent themes
#theme_set(theme_minimal())
plotty <- ggplot(mtcars,aes(x=wt,y=mpg)) + geom_point()
# you can add a theme to a specific plot
#plotty <- plotty + theme_dark()
# using themes from ggthemes package
plotty <- plotty + theme_pander()
plotty
library(ggplot2)
mpgHist <- ggplot(mpg, aes(x=hwy)) + geom_histogram()
mpgHist
mpgHist <- ggplot(mpg, aes(x=hwy)) + geom_histogram(aes(fill=model))
mpgHist
mpgHist <- ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=0.1, aes(fill=model))
mpgHist
mpgHist <- ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=0.2, aes(fill=model))
mpgHist
mpgHist <- ggplot(mpg, aes(x=hwy)) + geom_histogram(binwidth=1, aes(fill=model))
mpgHist
library(ggplot2)
library(ggthemes)
head(mpg)
library(ggplot2)
library(ggthemes)
head(mpg)
colnames(mpg)
carBar <- ggplot(mpg, aes(x=manufacturer)) + geom_bar(aes(fill=cyl))
carBar
carBar <- ggplot(mpg, aes(x=manufacturer)) + geom_bar(aes(fill=factor(cyl))
carBar
carBar <- ggplot(mpg, aes(x=manufacturer)) + geom_bar(aes(fill=factor(cyl)))
carBar
head(txhousing)
head(txhousing)
colnames(txhousing)
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point()
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(shape=factor(month)))
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(shape=factor(city)))
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(shape=factor(year)))
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(fill=factor(month)))
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(fill=factor(month))) + scale_color_discrete()
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)))
#+ scale_color_discrete()
#help(scal)
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)))
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(size=3, color=factor(month)))
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=3)
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2)
volSales
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
# change the color scale
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
volSales
smoothVolSales <- volSales + geom_smooth()
smoothVolSales <- volSales + geom_smooth()
smoothVolSales
smoothVolSales <- volSales + geom_smooth(color='red')
smoothVolSales
library(ggplot2)
library(readr)
library(dplyr)
df <- read.csv('Economist_Assignment_Data.csv')
library(ggplot2)
library(readr)
library(dplyr)
df <- read.csv('Economist_Assignment_Data.csv')
library(ggplot2)
library(readr)
library(dplyr)
df <- read.csv('Economist_Assignment_Data.csv')
library(ggplot2)
library(readr)
library(dplyr)
df <- read_csv('Economist_Assignment_Data.csv')
library(ggplot2)
library(readr)
library(dplyr)
df <- read.csv('./Training Exercises/Capstone and Data Viz Projects/Data Visualization Project/Economist_Assignment_Data.csv')
str(df)
library(ggplot2)
library(readr)
library(dplyr)
df <- read.csv('./Training Exercises/Capstone and Data Viz Projects/Data Visualization Project/Economist_Assignment_Data.csv')
str(df)
colnames(df)
library(ggplot2)
library(readr)
library(dplyr)
df <- read.csv('./Training Exercises/Capstone and Data Viz Projects/Data Visualization Project/Economist_Assignment_Data.csv')
str(df)
colnames(df)
head(df)
library(ggplot2)
library(readr)
library(dplyr)
df <- read.csv('./Training Exercises/Capstone and Data Viz Projects/Data Visualization Project/Economist_Assignment_Data.csv')
str(df)
colnames(df)
head(df)
nrow(df)
library(ggplot2)
library(readr)
library(dplyr)
df <- read.csv('./Training Exercises/Capstone and Data Viz Projects/Data Visualization Project/Economist_Assignment_Data.csv')
str(df)
colnames(df)
#head(df)
nrow(df)
library(ggplot2)
library(readr)
library(dplyr)
df <- read.csv('./Training Exercises/Capstone and Data Viz Projects/Data Visualization Project/Economist_Assignment_Data.csv')
str(df)
colnames(df)
nrow(df)
head(df)
help(fread)
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), size=3)
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), size=3, alpha=0.4)
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), size=3, alpha=0)
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), size=3, alpha=0.1)
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), size=3, alpha=0.3)
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), size=3, alpha=0.5)
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), size=3, fill=0)
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), size=3, fill=0.1)
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
help(shape)
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), shape = NA )
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), shape = "." )
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), shape = "a" )
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), shape = "b" )
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), shape = "c" )
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), shape = "k" )
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), shape = "1" )
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), shape = 1 )
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), shape = 1, size=3 )
#carPlot <- carPlot + geom_point(aes(shape=factor(cyl),color=factor(cyl)))
#carPlot <- carPlot + geom_point(aes(color=hp)) + scale_color_gradient(low='blue',high='red')
#volSales <- ggplot(txhousing, aes(x=volume,y=sales)) + geom_point(aes(color=factor(month)), size=2, alpha=0.4)
pl
pl + geom_smooth(aes(group=1))
pl
pl + geom_smooth(aes(group=1))
pl2 <- pl + pl + geom_smooth(aes(group=1), method = 'lm')
pl2 <- pl + geom_smooth(aes(group=1), method = 'lm')
pl2
pl2 <- pl + geom_smooth(aes(group=1), method = 'lm', formula = y ~ log(x))
pl2
pl2 <- pl + geom_smooth(aes(group=1), method = 'lm', formula = y ~ log(x), se=FALSE, color='red')
pl2
pl2 <- pl2 + geom_text(aes(label=Country))
pl2
pl2 + geom_text(aes(label=Country))
pointsToLabel <- c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan", "Afghanistan", "Congo", "Greece", "Argentina", "Brazil", "India", "Italy", "China", "South Africa", "Spain", "Botswana", "Cape Verde", "Bhutan", "Rwanda", "France", "United States", "Germany", "Britain", "Barbados", "Norway", "Japan", "New Zealand", "Singapore")
pl3 <- pl2 + geom_text(aes(label = Country), color = "gray20",
data = subset(df, Country %in% pointsToLabel),check_overlap = TRUE)
pl3
pointsToLabel <- c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan", "Afghanistan", "Congo", "Greece", "Argentina", "Brazil", "India", "Italy", "China", "South Africa", "Spain", "Botswana", "Cape Verde", "Bhutan", "Rwanda", "France", "United States", "Germany", "Britain", "Barbados", "Norway", "Japan", "New Zealand", "Singapore")
pl3 <- pl2 + geom_text(aes(label = Country), color = "gray20",
data = subset(df, Country %in% pointsToLabel),check_overlap = TRUE)
pl3
library(ggplot2)
library(readr)
library(dplyr)
df <- read.csv('./Training Exercises/Capstone and Data Viz Projects/Data Visualization Project/Economist_Assignment_Data.csv')
str(df)
colnames(df)
nrow(df)
## Check the head of df
head(df)
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), shape = 1, size=3 )
pl
pl + geom_smooth(aes(group=1))
pl2 <- pl + geom_smooth(aes(group=1), method = 'lm', formula = y ~ log(x), se=FALSE, color='red')
pl2
pl2 + geom_text(aes(label=Country))
pointsToLabel <- c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan", "Afghanistan", "Congo", "Greece", "Argentina", "Brazil", "India", "Italy", "China", "South Africa", "Spain", "Botswana", "Cape Verde", "Bhutan", "Rwanda", "France", "United States", "Germany", "Britain", "Barbados", "Norway", "Japan", "New Zealand", "Singapore")
pl3 <- pl2 + geom_text(aes(label = Country), color = "gray20",
data = subset(df, Country %in% pointsToLabel),check_overlap = TRUE)
pl3
pl4 <- pl3 + theme_bw()
pl4 <- pl3 + theme_bw()
pl4
pl4 + scale_x_continuous(name=CPI, limits = c(0,100), breaks = 1:10)
pl4 + scale_x_continuous(name=df$CPI, limits = c(0,100), breaks = 1:10)
pl4 + scale_x_continuous(name=df$CPI, limits = c(1,10), breaks = 1:10)
help(breaks)
pl4 <- pl4 + scale_x_continuous(name=CPI, limits = c(1,10), breaks = 1:10)
pl4 <- pl4 + scale_x_continuous(name='Corruption Perceptions Index', limits = c(1,10), breaks = 1:10)
pl4
pl4 <- pl4 + scale_x_continuous(name='Corruption Perceptions Index, 2011(10=least corrupt)', limits = c(1,10), breaks = 1:10)
pl4
pl4 <- pl4 + scale_y_continuous(name='Human Development Index, 2011 (1=Best)', limits = c(0.2,1.0), breaks = 0.2:1.0)
pl4
pl4 <- pl4 + ggtitle('Corruption and Human Development')
pl4
pl4 <- pl4 + scale_x_continuous(name='Corruption Perceptions Index, 2011(10=least corrupt)', limits = 1:10, breaks = 1:10)
pl4
pl4 <- pl4 + scale_x_continuous(name='Corruption Perceptions Index, 2011(10=least corrupt)', limits = c(1,10), breaks = 1:10)
pl4
pl4 <- pl4 + scale_y_continuous(name='Human Development Index, 2011 (1=Best)', limits = c(0,1.0), breaks = 0.2:1.0)
pl4
pl4 <- pl4 + scale_y_continuous(name='Human Development Index, 2011 (1=Best)', limits = c(0.0,1.0), breaks = 0.2:1.0)
pl4
pl4 <- pl4 + scale_y_continuous(name='Human Development Index, 2011 (1=Best)', limits = c(0.0,0.2,0.4,0.6,0.8,1.0), breaks = 0.2:1.0)
pl4
pl4 <- pl4 + scale_y_continuous(name='Human Development Index, 2011 (1=Best)', limits = c(0.0,1.0), breaks = 0.2:1.0)
pl4
pl4 <- pl4 + scale_x_continuous(name='Corruption Perceptions Index, 2011(10=least corrupt)', limits = c(0.9,10.5), breaks = 1:10)
pl4
pl4 <- pl4 + scale_y_continuous(name='Human Development Index, 2011 (1=Best)', limits = c(0.0,1.0))
pl4
pl4 <- pl4 + scale_y_continuous(name='Human Development Index, 2011 (1=Best)', limits = c(0.2,1.0))
pl4
pl4 <- pl4 + ggtitle('Corruption and Human Development')
pl4
library(ggplot2)
library(ggthemes)
library(readr)
library(dplyr)
df <- read.csv('./Training Exercises/Capstone and Data Viz Projects/Data Visualization Project/Economist_Assignment_Data.csv')
str(df)
colnames(df)
nrow(df)
## Check the head of df
head(df)
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), shape = 1, size=3 )
pl
pl + geom_smooth(aes(group=1))
pl2 <- pl + geom_smooth(aes(group=1), method = 'lm', formula = y ~ log(x), se=FALSE, color='red')
pl2
pl2 + geom_text(aes(label=Country))
pointsToLabel <- c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan", "Afghanistan", "Congo", "Greece", "Argentina", "Brazil", "India", "Italy", "China", "South Africa", "Spain", "Botswana", "Cape Verde", "Bhutan", "Rwanda", "France", "United States", "Germany", "Britain", "Barbados", "Norway", "Japan", "New Zealand", "Singapore")
pl3 <- pl2 + geom_text(aes(label = Country), color = "gray20",
data = subset(df, Country %in% pointsToLabel),check_overlap = TRUE)
pl3
pl4 <- pl3 + theme_bw()
pl4
pl4 <- pl4 + scale_x_continuous(name='Corruption Perceptions Index, 2011(10=least corrupt)', limits = c(0.9,10.5), breaks = 1:10)
pl4
pl4 <- pl4 + scale_y_continuous(name='Human Development Index, 2011 (1=Best)', limits = c(0.2,1.0))
pl4
pl4 <- pl4 + ggtitle('Corruption and Human Development')
pl4
pl4 <- pl4 + ggtitle('Corruption and Human Development') + theme_economist()
pl4
pointsToLabel <- c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan", "Afghanistan", "Congo", "Greece", "Argentina", "Brazil", "India", "Italy", "China", "South Africa", "Spain", "Botswana", "Cape Verde", "Bhutan", "Rwanda", "France", "United States", "Germany", "Britain", "Barbados", "Norway", "Japan", "New Zealand", "Singapore")
pl3 <- pl2 + geom_text(aes(label = Country), color = "gray20", fontface='bold',
data = subset(df, Country %in% pointsToLabel),check_overlap = TRUE)
pl3
pl4 <- pl3 + theme_bw()
pl4
pl4 <- pl4 + scale_x_continuous(name='Corruption Perceptions Index, 2011(10=least corrupt)', limits = c(0.9,10.5), breaks = 1:10)
pl4
pl4 <- pl4 + scale_y_continuous(name='Human Development Index, 2011 (1=Best)', limits = c(0.2,1.0))
pl4
pl4 <- pl4 + ggtitle('Corruption and Human Development') + theme_economist()
pl4
cor(df$HDI, df$CPI)
# calculate the correlation coefficient (because I haven't specified a method, this will use the default Pearson Correlation Coefficient)
correlationCoefficient <- cor(df$HDI, df$CPI)
print(paste("Correlation Coefficient: {correlationCoefficient}"))
# calculate the correlation coefficient (because I haven't specified a method, this will use the default Pearson Correlation Coefficient)
correlationCoefficient <- cor(df$HDI, df$CPI)
print("Correlation Coefficient: {correlationCoefficient}")
# calculate the correlation coefficient (because I haven't specified a method, this will use the default Pearson Correlation Coefficient)
correlationCoefficient <- cor(df$HDI, df$CPI)
library(stringr)
str_glue("Correlation Coefficient: {correlationCoefficient}")
cor.test(df$HDI, DF$CPI)
cor.test(df$HDI, df$CPI)
correlationTest <- cor.test(df$HDI, df$CPI)
class(correlationTest)
help(htest)
correlationTest <- cor.test(df$HDI, df$CPI)
# class(correlationTest)
correlationTest
correlationTest <- cor.test(df$HDI, df$CPI)
# class(correlationTest)
correlationTest
p_value <- round(2.2e-16)
correlationTest <- cor.test(df$HDI, df$CPI)
# class(correlationTest)
correlationTest
p_value <- round(2.2e-16)
p_value
correlationTest <- cor.test(df$HDI, df$CPI)
# class(correlationTest)
correlationTest
p_value <- round(2.2e-16, digits=3)
p_value
correlationTest <- cor.test(df$HDI, df$CPI)
# class(correlationTest)
correlationTest
p_value <- format(2.2e-16, scientific = FALSE)
p_value
correlationTest <- cor.test(df$HDI, df$CPI)
# class(correlationTest)
correlationTest
p_value <- format(2.2e-16, scientific = FALSE)
str_glue("P-value: {p_value}")
install.packages("plotly")
library(ggplot2)
library(plotly)
pl <- ggplot(mtcars, aes(mpg,wt)) + geom_point()
pl
library(ggplot2)
library(plotly)
pl <- ggplot(mtcars, aes(mpg,wt)) + geom_point()
gpl <- ggplotly(pl)
gpl
pl4 <- pl4 + ggtitle('Corruption and Human Development') + theme_economist()
library(ggplot2)
library(ggthemes)
library(readr)
library(dplyr)
df <- read.csv('./Training Exercises/Capstone and Data Viz Projects/Data Visualization Project/Economist_Assignment_Data.csv')
str(df)
colnames(df)
nrow(df)
## Check the head of df
head(df)
#pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region))
## Change the points to be larger empty circles. (You'll have to go back and add arguments to geom_point() and reassign it to pl.) You'll need to figure out what shape= and size=
pl <- ggplot(df, aes(x=CPI,y=HDI)) + geom_point(aes(color=Region), shape = 1, size=3 )
pl
pl + geom_smooth(aes(group=1))
pl2 <- pl + geom_smooth(aes(group=1), method = 'lm', formula = y ~ log(x), se=FALSE, color='red')
pl2
pl2 + geom_text(aes(label=Country))
pointsToLabel <- c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan", "Afghanistan", "Congo", "Greece", "Argentina", "Brazil", "India", "Italy", "China", "South Africa", "Spain", "Botswana", "Cape Verde", "Bhutan", "Rwanda", "France", "United States", "Germany", "Britain", "Barbados", "Norway", "Japan", "New Zealand", "Singapore")
pl3 <- pl2 + geom_text(aes(label = Country), color = "gray20", fontface='bold',
data = subset(df, Country %in% pointsToLabel),check_overlap = TRUE)
pl3
pl4 <- pl3 + theme_bw()
pl4
pl4 <- pl4 + scale_x_continuous(name='Corruption Perceptions Index, 2011(10=least corrupt)', limits = c(0.9,10.5), breaks = 1:10)
pl4
pl4 <- pl4 + scale_y_continuous(name='Human Development Index, 2011 (1=Best)', limits = c(0.2,1.0))
pl4
pl4 <- pl4 + ggtitle('Corruption and Human Development') + theme_economist()
library(plotly)
gpl4 <- ggplotly(pl4)
gpl4
# calculate the correlation coefficient (because I haven't specified a method, this will use the default Pearson Correlation Coefficient)
correlationCoefficient <- cor(df$HDI, df$CPI)
library(stringr)
str_glue("Correlation Coefficient: {correlationCoefficient}")
correlationTest <- cor.test(df$HDI, df$CPI)
# class(correlationTest)
correlationTest
p_value <- format(2.2e-16, scientific = FALSE)
str_glue("P-value: {p_value}")
